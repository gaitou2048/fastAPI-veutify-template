FROM ubuntu:latest

ENV TZ Asia/Tokyo
ENV LANG ja_JP.UTF-8
ENV LANGUAGE ja_JP:ja
# ビルド中のみnoninteractiveにする
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \
    sudo \
    wget \
    curl \
    git \
    make \
    tzdata \
    python3 \
    locales && \
    locale-gen ja_JP.UTF-8 

# Pyenv+python11インストール
RUN apt-get update && apt-get install -y \
    build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev llvm \
    libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ENV PATH "/root/.pyenv/bin:${PATH}"
RUN git clone https://github.com/pyenv/pyenv.git ~/.pyenv \
    && cd ~/.pyenv && src/configure && make -C src \
    && pyenv install 3.11.1
# pyenvでインストールしたパスを通す
ENV PATH "/root/.pyenv/versions/3.11.1/bin/:$PATH"

# Poetryインストール
ENV POETRY_HOME=/opt/poetry
RUN curl -sSL https://install.python-poetry.org | python3 - \
    && cd /usr/local/bin \
    && ln -s /opt/poetry/bin/poetry \
    && poetry config virtualenvs.create false
# Pythonパッケージインストール
WORKDIR /workspaces/fastAPI-veutify-template/back/app
COPY ./back/app/pyproject.toml* ./back/app/poetry.lock* ./
RUN poetry install

# Dockerのインストール(devcontainer内でDockerを使う) 
# GPGキー取得
RUN apt-get update && apt-get install -y \
    ca-certificates \
    gnupg \
    lsb-release \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg \
    && echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
# DockerEngineインストール
RUN apt-get update \
    && sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*